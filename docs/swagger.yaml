basePath: /
definitions:
  models.BookResponse:
    properties:
      id:
        type: integer
      quantity:
        type: integer
      title:
        type: string
    type: object
  models.HttpError:
    properties:
      message:
        description: 'example: "invalid identifier"'
        type: string
      statusCode:
        description: 'example: 400'
        type: integer
    type: object
  models.User:
    properties:
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simple library API
  title: Library API
  version: "1.0"
paths:
  /books:
    get:
      description: Get a list of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BookResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Get all books
      tags:
      - books
  /books/{bookId}:
    get:
      description: Get a book by book ID
      parameters:
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BookResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HttpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Get a book by ID
      tags:
      - books
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with provided first name and last name
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Create a new user
      tags:
      - users
  /users/{userId}:
    get:
      description: Get a user by user ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HttpError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Get a user by ID
      tags:
      - users
  /users/{userId}/books/{bookId}/borrow:
    post:
      consumes:
      - application/json
      description: Borrow a book by user ID and book ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: book borrowed successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HttpError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Borrow a book
      tags:
      - books
  /users/{userId}/books/{bookId}/return:
    put:
      consumes:
      - application/json
      description: Return a book by user ID and book ID
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Book ID
        in: path
        name: bookId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: book returned successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HttpError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.HttpError'
      summary: Return a book
      tags:
      - books
swagger: "2.0"
